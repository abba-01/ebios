Found 6 known vulnerabilities in 5 packages
{"dependencies": [{"name": "annotated-types", "version": "0.7.0", "vulns": []}, {"name": "anyio", "version": "4.11.0", "vulns": []}, {"name": "argcomplete", "version": "3.2.2", "vulns": []}, {"name": "asciidoc", "version": "10.2.0", "vulns": []}, {"name": "astroid", "version": "4.0.1", "vulns": []}, {"name": "astropy", "version": "7.1.1", "vulns": []}, {"name": "astropy-iers-data", "version": "0.2025.10.6.0.35.25", "vulns": []}, {"name": "astroquery", "version": "0.4.11", "vulns": []}, {"name": "attrs", "version": "23.2.0", "vulns": []}, {"name": "authlib", "version": "1.6.5", "vulns": []}, {"name": "bandit", "version": "1.8.6", "vulns": []}, {"name": "bcc", "skip_reason": "Dependency not found on PyPI and could not be audited: bcc (0.32.0)"}, {"name": "bcrypt", "version": "5.0.0", "vulns": []}, {"name": "beautifulsoup4", "version": "4.14.2", "vulns": []}, {"name": "blinker", "version": "1.9.0", "vulns": []}, {"name": "boolean-py", "version": "5.0", "vulns": []}, {"name": "brlapi", "skip_reason": "Dependency not found on PyPI and could not be audited: brlapi (0.8.5)"}, {"name": "cachecontrol", "version": "0.14.3", "vulns": []}, {"name": "camb", "version": "1.6.4", "vulns": []}, {"name": "certifi", "version": "2025.10.5", "vulns": []}, {"name": "cffi", "version": "1.16.0", "vulns": []}, {"name": "charset-normalizer", "version": "3.3.2", "vulns": []}, {"name": "click", "version": "8.3.0", "vulns": []}, {"name": "cockpit", "skip_reason": "Dependency not found on PyPI and could not be audited: cockpit (334.1)"}, {"name": "configshell-fb", "version": "1.1.30", "vulns": []}, {"name": "contourpy", "version": "1.3.3", "vulns": []}, {"name": "coverage", "version": "7.11.0", "vulns": []}, {"name": "cryptography", "version": "43.0.0", "vulns": [{"id": "GHSA-h4gh-qq45-vh27", "fix_versions": ["43.0.1"], "aliases": [], "description": "pyca/cryptography's wheels include a statically linked copy of OpenSSL. The versions of OpenSSL included in cryptography 37.0.0-43.0.0 are vulnerable to a security issue. More details about the vulnerability itself can be found in https://openssl-library.org/news/secadv/20240903.txt.  If you are building cryptography source (\"sdist\") then you are responsible for upgrading your copy of OpenSSL. Only users installing from wheels built by the cryptography project (i.e., those distributed on PyPI) need to update their cryptography versions. "}, {"id": "GHSA-79v4-65xg-pq4g", "fix_versions": ["44.0.1"], "aliases": ["CVE-2024-12797"], "description": "pyca/cryptography's wheels include a statically linked copy of OpenSSL. The versions of OpenSSL included in cryptography 42.0.0-44.0.0 are vulnerable to a security issue. More details about the vulnerability itself can be found in https://openssl-library.org/news/secadv/20250211.txt.  If you are building cryptography source (\"sdist\") then you are responsible for upgrading your copy of OpenSSL. Only users installing from wheels built by the cryptography project (i.e., those distributed on PyPI) need to update their cryptography versions."}]}, {"name": "cupshelpers", "skip_reason": "Dependency not found on PyPI and could not be audited: cupshelpers (1.0)"}, {"name": "cycler", "version": "0.12.1", "vulns": []}, {"name": "cyclonedx-python-lib", "version": "9.1.0", "vulns": []}, {"name": "dasbus", "version": "1.7", "vulns": []}, {"name": "dbus-python", "version": "1.3.2", "vulns": []}, {"name": "decorator", "version": "5.1.1", "vulns": []}, {"name": "defusedxml", "version": "0.7.1", "vulns": []}, {"name": "dill", "version": "0.4.0", "vulns": []}, {"name": "distro", "version": "1.9.0", "vulns": []}, {"name": "dnf", "skip_reason": "Dependency not found on PyPI and could not be audited: dnf (4.20.0)"}, {"name": "dparse", "version": "0.6.4", "vulns": []}, {"name": "ecdsa", "version": "0.19.1", "vulns": [{"id": "GHSA-wj6h-64fc-37mp", "fix_versions": [], "aliases": ["CVE-2024-23342"], "description": "python-ecdsa has been found to be subject to a Minerva timing attack on the P-256 curve. Using the `ecdsa.SigningKey.sign_digest()` API function and timing signatures an attacker can leak the internal nonce which may allow for private key discovery. Both ECDSA signatures, key generation, and ECDH operations are affected. ECDSA signature verification is unaffected. The python-ecdsa project considers side channel attacks out of scope for the project and there is no planned fix."}]}, {"name": "fastapi", "version": "0.119.1", "vulns": []}, {"name": "file-magic", "version": "0.4.0", "vulns": []}, {"name": "filelock", "version": "3.20.0", "vulns": []}, {"name": "flask", "version": "3.1.2", "vulns": []}, {"name": "fonttools", "version": "4.60.1", "vulns": []}, {"name": "h11", "version": "0.16.0", "vulns": []}, {"name": "h5py", "version": "3.15.1", "vulns": []}, {"name": "healpy", "version": "1.18.1", "vulns": []}, {"name": "html5lib", "version": "1.1", "vulns": []}, {"name": "httpcore", "version": "1.0.9", "vulns": []}, {"name": "httptools", "version": "0.7.1", "vulns": []}, {"name": "httpx", "version": "0.28.1", "vulns": []}, {"name": "idna", "version": "3.7", "vulns": []}, {"name": "iniconfig", "version": "2.1.0", "vulns": []}, {"name": "iniparse", "version": "0.5", "vulns": []}, {"name": "isort", "version": "7.0.0", "vulns": []}, {"name": "itsdangerous", "version": "2.2.0", "vulns": []}, {"name": "jaraco-classes", "version": "3.4.0", "vulns": []}, {"name": "jaraco-context", "version": "6.0.1", "vulns": []}, {"name": "jaraco-functools", "version": "4.3.0", "vulns": []}, {"name": "jeepney", "version": "0.9.0", "vulns": []}, {"name": "jinja2", "version": "3.1.6", "vulns": []}, {"name": "joblib", "version": "1.5.2", "vulns": []}, {"name": "jsonpointer", "version": "2.3", "vulns": []}, {"name": "jsonschema", "version": "4.19.1", "vulns": []}, {"name": "jsonschema-specifications", "version": "2023.11.2", "vulns": []}, {"name": "keyring", "version": "25.6.0", "vulns": []}, {"name": "kiwisolver", "version": "1.4.9", "vulns": []}, {"name": "kmod", "version": "0.9.2", "vulns": []}, {"name": "langtable", "version": "0.0.65", "vulns": []}, {"name": "libcomps", "skip_reason": "Dependency not found on PyPI and could not be audited: libcomps (0.1.21)"}, {"name": "libdnf", "skip_reason": "Dependency not found on PyPI and could not be audited: libdnf (0.73.1)"}, {"name": "libvirt-python", "version": "10.10.0", "vulns": []}, {"name": "license-expression", "version": "30.4.4", "vulns": []}, {"name": "louis", "skip_reason": "Dependency not found on PyPI and could not be audited: louis (3.28.0)"}, {"name": "lxml", "version": "5.2.1", "vulns": []}, {"name": "markdown-it-py", "version": "4.0.0", "vulns": []}, {"name": "markupsafe", "version": "3.0.3", "vulns": []}, {"name": "marshmallow", "version": "4.0.1", "vulns": []}, {"name": "matplotlib", "version": "3.10.6", "vulns": []}, {"name": "mccabe", "version": "0.7.0", "vulns": []}, {"name": "mdurl", "version": "0.1.2", "vulns": []}, {"name": "more-itertools", "version": "10.8.0", "vulns": []}, {"name": "mpmath", "version": "1.3.0", "vulns": []}, {"name": "msgpack", "version": "1.1.2", "vulns": []}, {"name": "mypy", "version": "1.18.2", "vulns": []}, {"name": "mypy-extensions", "version": "1.1.0", "vulns": []}, {"name": "netaddr", "version": "1.3.0", "vulns": []}, {"name": "nftables", "skip_reason": "Dependency not found on PyPI and could not be audited: nftables (0.1)"}, {"name": "nltk", "version": "3.9.2", "vulns": []}, {"name": "nu-anthropology", "skip_reason": "Dependency not found on PyPI and could not be audited: nu-anthropology (0.9.0)"}, {"name": "numpy", "version": "1.26.4", "vulns": []}, {"name": "packageurl-python", "version": "0.17.5", "vulns": []}, {"name": "packaging", "version": "25.0", "vulns": []}, {"name": "pandas", "version": "2.2.2", "vulns": []}, {"name": "passlib", "version": "1.7.4", "vulns": []}, {"name": "pathspec", "version": "0.12.1", "vulns": []}, {"name": "pcp", "version": "5.0", "vulns": []}, {"name": "perf", "skip_reason": "Dependency not found on PyPI and could not be audited: perf (0.1)"}, {"name": "pexpect", "version": "4.9.0", "vulns": []}, {"name": "pillow", "version": "11.3.0", "vulns": []}, {"name": "pip", "version": "25.3", "vulns": []}, {"name": "pip-api", "version": "0.0.34", "vulns": []}, {"name": "pip-audit", "version": "2.9.0", "vulns": []}, {"name": "pip-requirements-parser", "version": "32.0.1", "vulns": []}, {"name": "platformdirs", "version": "4.5.0", "vulns": []}, {"name": "pluggy", "version": "1.6.0", "vulns": []}, {"name": "ply", "version": "3.11", "vulns": []}, {"name": "psutil", "version": "7.1.2", "vulns": []}, {"name": "ptyprocess", "version": "0.7.0", "vulns": []}, {"name": "py-serializable", "version": "2.1.0", "vulns": []}, {"name": "pyasn1", "version": "0.6.1", "vulns": []}, {"name": "pycairo", "version": "1.25.1", "vulns": []}, {"name": "pycparser", "version": "2.20", "vulns": []}, {"name": "pycups", "version": "2.0.1", "vulns": []}, {"name": "pydantic", "version": "2.12.3", "vulns": []}, {"name": "pydantic-core", "version": "2.41.4", "vulns": []}, {"name": "pyenchant", "version": "3.2.2", "vulns": []}, {"name": "pyerfa", "version": "2.0.1.5", "vulns": []}, {"name": "pygments", "version": "2.19.2", "vulns": []}, {"name": "pygobject", "version": "3.46.0", "vulns": []}, {"name": "pyinotify", "version": "0.9.6", "vulns": []}, {"name": "pylint", "version": "4.0.2", "vulns": []}, {"name": "pyodbc", "version": "5.1.0", "vulns": []}, {"name": "pyparsing", "version": "3.1.1", "vulns": []}, {"name": "pytest", "version": "8.2.0", "vulns": []}, {"name": "pytest-cov", "version": "7.0.0", "vulns": []}, {"name": "python-dateutil", "version": "2.9.0.post0", "vulns": []}, {"name": "python-dotenv", "version": "1.1.1", "vulns": []}, {"name": "python-jose", "version": "3.5.0", "vulns": []}, {"name": "python-linux-procfs", "skip_reason": "Dependency not found on PyPI and could not be audited: python-linux-procfs (0.7.3)"}, {"name": "python-multipart", "version": "0.0.20", "vulns": []}, {"name": "pytz", "version": "2025.2", "vulns": []}, {"name": "pyudev", "version": "0.24.1", "vulns": []}, {"name": "pyvo", "version": "1.7", "vulns": []}, {"name": "pyxdg", "version": "0.27", "vulns": []}, {"name": "pyyaml", "version": "6.0.1", "vulns": []}, {"name": "pyynl", "skip_reason": "Dependency not found on PyPI and could not be audited: pyynl (0.0.1)"}, {"name": "referencing", "version": "0.31.1", "vulns": []}, {"name": "regex", "version": "2024.11.6", "vulns": []}, {"name": "requests", "version": "2.32.4", "vulns": []}, {"name": "rich", "version": "14.2.0", "vulns": []}, {"name": "rpds-py", "version": "0.17.1", "vulns": []}, {"name": "rpm", "skip_reason": "Dependency not found on PyPI and could not be audited: rpm (4.19.1.1)"}, {"name": "rsa", "version": "4.9.1", "vulns": []}, {"name": "rtslib-fb", "version": "2.1.76", "vulns": []}, {"name": "ruamel-yaml", "version": "0.18.16", "vulns": []}, {"name": "ruamel-yaml-clib", "version": "0.2.14", "vulns": []}, {"name": "safety", "version": "3.6.2", "vulns": []}, {"name": "safety-schemas", "version": "0.0.16", "vulns": []}, {"name": "scipy", "version": "1.16.2", "vulns": []}, {"name": "secretstorage", "version": "3.4.0", "vulns": []}, {"name": "selinux", "skip_reason": "Dependency not found on PyPI and could not be audited: selinux (3.8)"}, {"name": "sepolicy", "skip_reason": "Dependency not found on PyPI and could not be audited: sepolicy (3.8)"}, {"name": "setools", "skip_reason": "Dependency not found on PyPI and could not be audited: setools (4.5.1)"}, {"name": "setroubleshoot", "skip_reason": "Dependency not found on PyPI and could not be audited: setroubleshoot (3.3.33)"}, {"name": "setuptools", "version": "69.0.3", "vulns": [{"id": "PYSEC-2025-49", "fix_versions": ["78.1.1"], "aliases": ["CVE-2025-47273", "GHSA-5rjg-fvgr-3xxf"], "description": "setuptools is a package that allows users to download, build, install, upgrade, and uninstall Python packages. A path traversal vulnerability in `PackageIndex` is present in setuptools prior to version 78.1.1. An attacker would be allowed to write files to arbitrary locations on the filesystem with the permissions of the process running the Python code, which could escalate to remote code execution depending on the context. Version 78.1.1 fixes the issue."}]}, {"name": "shellingham", "version": "1.5.4", "vulns": []}, {"name": "six", "version": "1.17.0", "vulns": []}, {"name": "sniffio", "version": "1.3.1", "vulns": []}, {"name": "sortedcontainers", "version": "2.4.0", "vulns": []}, {"name": "sos", "skip_reason": "Dependency not found on PyPI and could not be audited: sos (4.10.0)"}, {"name": "soupsieve", "version": "2.8", "vulns": []}, {"name": "starlette", "version": "0.48.0", "vulns": [{"id": "GHSA-7f5h-v6xp-fcq8", "fix_versions": ["0.49.1"], "aliases": ["CVE-2025-62727"], "description": "### Summary An unauthenticated attacker can send a crafted HTTP Range header that triggers quadratic-time processing in Starlette's `FileResponse` Range parsing/merging logic. This enables CPU exhaustion per request, causing denial\u2011of\u2011service for endpoints serving files (e.g., `StaticFiles` or any use of `FileResponse`).  ### Details Starlette parses multi-range requests in ``FileResponse._parse_range_header()``, then merges ranges using an O(n^2) algorithm.  ```python # starlette/responses.py _RANGE_PATTERN = re.compile(r\"(\\d*)-(\\d*)\") # vulnerable to O(n^2) complexity ReDoS  class FileResponse(Response):     @staticmethod     def _parse_range_header(http_range: str, file_size: int) -> list[tuple[int, int]]:         ranges: list[tuple[int, int]] = []         try:             units, range_ = http_range.split(\"=\", 1)         except ValueError:             raise MalformedRangeHeader()          # [...]          ranges = [             (                 int(_[0]) if _[0] else file_size - int(_[1]),                 int(_[1]) + 1 if _[0] and _[1] and int(_[1]) < file_size else file_size,             )             for _ in _RANGE_PATTERN.findall(range_) # vulnerable             if _ != (\"\", \"\")         ]  ```  The parsing loop of ``FileResponse._parse_range_header()`` uses the regular expression which vulnerable to denial of service for its O(n^2) complexity. A crafted `Range` header can maximize its complexity.  The merge loop processes each input range by scanning the entire result list, yielding quadratic behavior with many disjoint ranges. A crafted Range header with many small, non-overlapping ranges (or specially shaped numeric substrings) maximizes comparisons.    This affects any Starlette application that uses:    - ``starlette.staticfiles.StaticFiles`` (internally returns `FileResponse`) \u2014 `starlette/staticfiles.py:178`   - Direct ``starlette.responses.FileResponse`` responses  ### PoC ```python #!/usr/bin/env python3  import sys import time  try:     import starlette     from starlette.responses import FileResponse except Exception as e:     print(f\"[ERROR] Failed to import starlette: {e}\")     sys.exit(1)   def build_payload(length: int) -> str:     \"\"\"Build the Range header value body: '0' * num_zeros + '0-'\"\"\"     return (\"0\" * length) + \"a-\"   def test(header: str, file_size: int) -> float:     start = time.perf_counter()     try:         FileResponse._parse_range_header(header, file_size)     except Exception:         pass     end = time.perf_counter()     elapsed = end - start     return elapsed   def run_once(num_zeros: int) -> None:     range_body = build_payload(num_zeros)     header = \"bytes=\" + range_body     # Use a sufficiently large file_size so upper bounds default to file size     file_size = max(len(range_body) + 10, 1_000_000)          print(f\"[DEBUG] range_body length: {len(range_body)} bytes\")     elapsed_time = test(header, file_size)     print(f\"[DEBUG] elapsed time: {elapsed_time:.6f} seconds\\n\")   if __name__ == \"__main__\":     print(f\"[INFO] Starlette Version: {starlette.__version__}\")     for n in [5000, 10000, 20000, 40000]:         run_once(n)  \"\"\" $ python3 poc_dos_range.py [INFO] Starlette Version: 0.48.0 [DEBUG] range_body length: 5002 bytes [DEBUG] elapsed time: 0.053932 seconds  [DEBUG] range_body length: 10002 bytes [DEBUG] elapsed time: 0.209770 seconds  [DEBUG] range_body length: 20002 bytes [DEBUG] elapsed time: 0.885296 seconds  [DEBUG] range_body length: 40002 bytes [DEBUG] elapsed time: 3.238832 seconds \"\"\" ```  ### Impact Any Starlette app serving files via FileResponse or StaticFiles; frameworks built on Starlette (e.g., FastAPI) are indirectly impacted when using file-serving endpoints. Unauthenticated remote attackers can exploit this via a single HTTP request with a crafted Range header."}]}, {"name": "stevedore", "version": "5.5.0", "vulns": []}, {"name": "subscription-manager", "skip_reason": "Dependency not found on PyPI and could not be audited: subscription-manager (1.30.6.1)"}, {"name": "sympy", "version": "1.14.0", "vulns": []}, {"name": "systemd-python", "version": "235", "vulns": []}, {"name": "targetcli-fb", "skip_reason": "Dependency not found on PyPI and could not be audited: targetcli-fb (2.1.58)"}, {"name": "tenacity", "version": "9.1.2", "vulns": []}, {"name": "toml", "version": "0.10.2", "vulns": []}, {"name": "tomlkit", "version": "0.13.3", "vulns": []}, {"name": "tqdm", "version": "4.67.1", "vulns": []}, {"name": "typer", "version": "0.20.0", "vulns": []}, {"name": "typing-extensions", "version": "4.15.0", "vulns": []}, {"name": "typing-inspection", "version": "0.4.2", "vulns": []}, {"name": "tzdata", "version": "2025.2", "vulns": []}, {"name": "un-algebra", "skip_reason": "Dependency not found on PyPI and could not be audited: un-algebra (1.0.0a0)"}, {"name": "un-algebra-reanchor", "skip_reason": "Dependency not found on PyPI and could not be audited: un-algebra-reanchor (0.1.0)"}, {"name": "urllib3", "version": "1.26.19", "vulns": [{"id": "GHSA-pq67-6m6q-mj2v", "fix_versions": ["2.5.0"], "aliases": ["CVE-2025-50181"], "description": "urllib3 handles redirects and retries using the same mechanism, which is controlled by the `Retry` object. The most common way to disable redirects is at the request level, as follows:  ```python resp = urllib3.request(\"GET\", \"https://httpbin.org/redirect/1\", redirect=False) print(resp.status) # 302 ```  However, it is also possible to disable redirects, for all requests, by instantiating a `PoolManager` and specifying `retries` in a way that disable redirects:  ```python import urllib3  http = urllib3.PoolManager(retries=0)  # should raise MaxRetryError on redirect http = urllib3.PoolManager(retries=urllib3.Retry(redirect=0))  # equivalent to the above http = urllib3.PoolManager(retries=False)  # should return the first response  resp = http.request(\"GET\", \"https://httpbin.org/redirect/1\") ```  However, the `retries` parameter is currently ignored, which means all the above examples don't disable redirects.  ## Affected usages  Passing `retries` on `PoolManager` instantiation to disable redirects or restrict their number.  By default, requests and botocore users are not affected.  ## Impact  Redirects are often used to exploit SSRF vulnerabilities. An application attempting to mitigate SSRF or open redirect vulnerabilities by disabling redirects at the PoolManager level will remain vulnerable.  ## Remediation  You can remediate this vulnerability with the following steps:   * Upgrade to a patched version of urllib3. If your organization would benefit from the continued support of urllib3 1.x, please contact [sethmichaellarson@gmail.com](mailto:sethmichaellarson@gmail.com) to discuss sponsorship or contribution opportunities.  * Disable redirects at the `request()` level instead of the `PoolManager()` level."}]}, {"name": "urwid", "version": "2.5.3", "vulns": []}, {"name": "uvicorn", "version": "0.38.0", "vulns": []}, {"name": "uvloop", "version": "0.22.1", "vulns": []}, {"name": "watchfiles", "version": "1.1.1", "vulns": []}, {"name": "wcwidth", "version": "0.2.6", "vulns": []}, {"name": "webencodings", "version": "0.5.1", "vulns": []}, {"name": "websockets", "version": "15.0.1", "vulns": []}, {"name": "werkzeug", "version": "3.1.3", "vulns": []}], "fixes": []}
